<tool id="visinity_preprocess" name="Create Visinity Archive" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="22.01">
    <description>Create an archive of pre-processed Visinity files</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="version_cmd"/>
    <command detect_errors="aggressive">
        <![CDATA[
    cp inputs.json /visinity/ &&
    cd /visinity/ &&
    cp "$__tool_directory__/archive_generate.py" "./archive_generate.py" &&
    vis-env python archive_generate.py inputs.json '$out_archive';
        ]]>
    </command>
    <configfiles>
	    <inputs name='inputs' filename='inputs.json' data_style='paths'/>
    </configfiles>
    <inputs>
        <param label='Image IDs/Names CSV' name='dataset_names' type='data' format='csv' help="Single column CSV file with IDs for each image in the cohort under column titled 'names'"/>
        <param label='Registered Images' name='channel_files' type='data_collection' collection_type='list' format='ome.tiff' help="Collection of properly formatted OME-TIFF images (Example: output of ASHLAR)"/>
        <param label='Segmentation Masks' name='label_files' type='data_collection' collection_type='list' format='tiff' help="Collection of masks (tiff) as generated by cell/nuclear segmentation tool (Mesmer, S3segmenter, etc.)"/>
        <param label='Quantification Files' name='quant_csvs' type='data_collection' collection_type='list' format='csv' help="Collection of feature quantification files (CSV) as generated by the MCMICRO Quantification module (MCQUANT)"/>
        <param label='Neighborhood Radius' name='n_radius' type='integer' value='20' min='1' max='1000' help="Radius to define a cell's local neighborhood for pattern detection in microns > 0"/>
        <param label='Cell Type CSV' name='celltype_csv' type='data' format='csv' help="File mapping cell-type indices to cell-type names. Expected column names are phenotypeID, phenotype"/>
    </inputs>
    <outputs>
        <data name="out_archive" format="zip"/>
    </outputs>
    <tests>
        <test>
            <param name="dataset_names" value="dataset_names.csv" />
            <param name="channel_files">
                <collection type="list">
                    <element name="i1" value="test_image.ome.tiff" />
                </collection>
            </param>
            <param name="label_files">
                <collection type="list">
                    <element name="m1" value="test_mask.tiff" />
                </collection>
            </param>
            <param name="quant_csvs">
                <collection type="list">
                    <element name="q1" value="test_quant.csv" />
                </collection>
            </param>
            <param name="celltype_csv" value="celltypes.csv" />
            <output name="out_archive">
                <assert_contents>
                    <has_size value="680000" delta="10000" />
                </assert_contents>
            </output>
            <!-- FIXME: replace with chunk below once CI is upgraded to Galaxy v24 -->
            <!-- <output name="out_archive">
                <has_archive_member path="./config.json"/>
                <has_archive_member path="./test_image/embedding.npy"/>
                <has_archive_member path="./test_image/neighborhood.npy"/>
            </output> -->
        </test>
    </tests>
    <help><![CDATA[
**Create a Visinity Archive**

Running Visinity in Galaxy requires execution of two separate tools in succession:

1. Create Visinity Archive (**this tool**)
2. Visualize Visinity Archive 

Creating a Visinity archive takes a cohort of multiplex tissue images and associated data 
(masks, feature quantification, and cell types) and performs all of the necessary preprocessing to 
create an interactive Visinity dashboard (executed in tool 2).

**Archive builder inputs**

1. **Image IDs/Names CSV**        Single column CSV file with IDs for each image in the cohort under column titled 'names'

Example:

.. image:: dataset_names_example.png

2. **Registered Images**       Collection of properly formatted OME-TIFF images (Example: output of ASHLAR)
3. **Segmentation Masks**      Collection of masks (tiff) as generated by cell/nuclear segmentation tool (Mesmer, S3segmenter, etc.)
4. **Quantification Files**    Collection of feature quantification files (CSV) as generated by the MCMICRO Quantification module (MCQUANT)

Expected columns for Quantification Files: `CellID, Marker_0, ... Marker_n, X_centroid, Y_centroid`

5. **Neighborhood Radius**     Radius to define a cell's local neighborhood for pattern detection in microns > 0
6. **Cell Type CSV**           File mapping cell-type indices to cell-type names. Expected column names are phenotypeID, phenotype

Example:  

.. image:: phenotype_id_example.png

**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~**  

**IMPORTANT NOTE**

**The order of all input collections and dataset names matters!**
**For instance, the first mask in the segmentation collection should have been derived**
**from the first image in the registered image collection, and should be match the first name**
**in the datasets name file, etc.**

**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~**  
   
**Outputs**

The output of the archive builder is a single dataset in Galaxy that is used as the primary input for the 
visualization tool (2)

**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~**

**IMPORTANT NOTE**

**Do not delete any of the input collections, as they are also required inputs for the visualization tool**

**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~**

]]>
    </help>
    <expand macro="citations" />
</tool>
